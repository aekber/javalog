import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.Collections;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.trivago.assignment.model.Hotel;
import com.trivago.assignment.model.HotelList;

public class Converter {

	public static void main(String[] args) throws JsonGenerationException, JsonMappingException, IOException, JAXBException {
        
		List<Hotel> hotelList = CSVLoader.loadObjectList(Hotel.class, "hotels.csv");
		Collections.sort(hotelList);
		HotelList list = new HotelList();
		list.addAll(hotelList);
        
        
        //TODO:Hotel in her bir property sine null kontrol√º ekle
                

        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);
        mapper.writeValue(new BufferedWriter(new OutputStreamWriter(new FileOutputStream("hotels.json"), "UTF-8")), hotelList);
        
        
        JAXBContext jaxbContext = JAXBContext.newInstance(HotelList.class);
		Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
		jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
		jaxbMarshaller.marshal(list, new BufferedWriter(new OutputStreamWriter(new FileOutputStream("hotels.xml"), "UTF-8")));
	}
}






import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.util.Collections;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.fasterxml.jackson.databind.MappingIterator;
import com.fasterxml.jackson.dataformat.csv.CsvMapper;
import com.fasterxml.jackson.dataformat.csv.CsvSchema;

public class CSVLoader
{     
    private static Logger LOG = LoggerFactory.getLogger(CSVLoader.class);

    public static <T> List<T> loadObjectList(Class<T> type, String fileName) 
    {
        try {
            CsvSchema bootstrapSchema = CsvSchema.emptySchema().withHeader();
            CsvMapper mapper = new CsvMapper();
            
            InputStream inputStream = ClassLoader.getSystemResourceAsStream(fileName);
            BufferedReader br = new BufferedReader(new InputStreamReader(inputStream, Charset.forName("UTF-8")));            
            MappingIterator<T> readValues = mapper.readerFor(type).with(bootstrapSchema).readValues(br);
            return readValues.readAll();
        } catch (Exception e) {
            LOG.error("Error occurred while loading object list from file " + fileName, e);
            return Collections.emptyList();
        }
    }
}





, Comparable<Hotel>

	public int compareTo(Hotel o) {
		return this.name.compareTo(o.getName());
	}
  
  
  
  
  
  
package com.trivago.assignment.model;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

@XmlRootElement(name = "hotels")
@XmlAccessorType (XmlAccessType.FIELD)
public class HotelList {

	@XmlElement(name = "hotel")
	private List<Hotel> list;

	public HotelList() {
		list = new ArrayList<Hotel>();
	}

	public void addAll(List<Hotel> hotelList) {
		list.addAll(hotelList);
	}
}







		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
