package com.trivago.assignment;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.util.Collections;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.fasterxml.jackson.databind.MappingIterator;
import com.fasterxml.jackson.dataformat.csv.CsvMapper;
import com.fasterxml.jackson.dataformat.csv.CsvSchema;

public class DataLoader
{     
    private static Logger LOG = LoggerFactory.getLogger(DataLoader.class);

    public static <T> List<T> loadObjectList(Class<T> type, String fileName) 
    {
        try {
            CsvSchema bootstrapSchema = CsvSchema.emptySchema().withHeader();
            CsvMapper mapper = new CsvMapper();
            
            //BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(new File("C:\\Users\\T38604\\Desktop\\eko\\deneme\\FileConverter\\resources\\" + fileName)), "UTF8"));
            
            
            //InputStream inputStream = getClass().getClassLoader().getResourceAsStream(fileName);
            
            //Charset inputCharset = Charset.forName("UTF-8");
            //InputStreamReader inputStreamReader = new InputStreamReader(inputStream, inputCharset);
            
            InputStream refStream = ClassLoader.getSystemResourceAsStream(fileName);
            BufferedReader br = new BufferedReader(new InputStreamReader(refStream, Charset.forName("UTF-8")));
            
            //Reader inputStreamReader = new InputStreamReader(inputStream, "UTF-8");
            MappingIterator<T> readValues = mapper.readerFor(type).with(bootstrapSchema).readValues(br);
            return readValues.readAll();
        } catch (Exception e) {
            LOG.error("Error occurred while loading object list from file " + fileName, e);
            return Collections.emptyList();
        }
    }
}




import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.List;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;

public class Converter {

	public static void main(String[] args) throws JsonGenerationException, JsonMappingException, IOException {
        List<Hotel> hotelList = DataLoader.loadObjectList(Hotel.class, "hotels.csv");
        
        
        //TODO:Hotel in her bir property sine null kontrol√º ekle
                
        System.out.println(hotelList.get(3999));
        ObjectMapper mapper = new ObjectMapper();
        mapper.enable(SerializationFeature.INDENT_OUTPUT);
        mapper.writeValue(new BufferedWriter(new OutputStreamWriter(new FileOutputStream("hotels.json"), "UTF-8")), hotelList);
	}
}


# Root logger option
log4j.rootLogger=INFO, stdout

# Redirect log messages to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%p] [%d{yyyy-MM-dd HH:mm:ss}] %c{1}:%L - %m%n


	<dependencies>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
			<version>2.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
