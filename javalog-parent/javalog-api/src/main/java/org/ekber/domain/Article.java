package org.ekber.domain;

// Generated 13.Eki.2010 10:25:23 by Hibernate Tools 3.3.0.GA

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;

import javax.swing.tree.TreeNode;

/**
 * Article generated by hbm2java
 */

public class Article extends NamedNode implements Serializable, TreeNode, Comparator<Article> {

	private static final long serialVersionUID = 1L;

	private Integer articleid;
	private List<Comments> comments;
	private List<UserRate> articleRates;
	private SubCategory subcategory;
	private Integer popularity;
	private String articleTag;
	private List<Tag> articleTags;
	private Float previewStar;
	private String preview;
	private String content;
	private Date insertdate;
	private boolean commentsActive;

	public Article(Integer articleid, List<Comments> comments,
			List<UserRate> articleRates, SubCategory subcategory,
			Integer popularity, String articleTag, Float previewStar,
			String preview, String content, Date insertdate, boolean commentsActive) {
		super();
		this.setType("article");
		this.articleid = articleid;
		this.comments = comments;
		this.articleRates = articleRates;
		this.subcategory = subcategory;
		this.popularity = popularity;
		this.articleTag = articleTag;
		this.previewStar = previewStar;
		this.preview = preview;
		this.content = content;
		this.insertdate = insertdate;
		this.commentsActive = commentsActive;
	}

	public Article() {
		super();
		this.setCommentsActive(true);
		this.setInsertdate(new Date());
		this.setPopularity(0);
		this.setPreview("");
		this.setPreviewStar(new Float(0));
		this.setType("article");
	}

	public Integer getArticleid() {
		return this.articleid;
	}

	public void setArticleid(Integer articleid) {
		this.articleid = articleid;
	}

	public List<Comments> getComments() {
		if (comments == null) {
			comments = new ArrayList<Comments>();
		}
		return comments;
	}

	public List<UserRate> getArticleRates() {
		if (articleRates == null) {
			articleRates = new ArrayList<UserRate>();
		}
		return articleRates;
	}

	public void setArticleRates(List<UserRate> articleRates) {
		this.articleRates = articleRates;
	}

	public void setComments(List<Comments> comments) {
		this.comments = comments;
	}

	public SubCategory getSubcategory() {
		return subcategory;
	}

	public void setSubcategory(SubCategory subcategory) {
		this.subcategory = subcategory;
	}

	public Integer getPopularity() {
		return popularity;
	}

	public void setPopularity(Integer popularity) {
		this.popularity = popularity;
	}

	public String getArticleTag() {
		return articleTag;
	}

	public void setArticleTag(String articleTag) {
		this.articleTag = articleTag;
	}

	public List<Tag> getArticleTags() {
		if(articleTags == null){
			articleTags = new ArrayList<Tag>();
		}
		return articleTags;
	}

	public void setArticleTags(List<Tag> articleTags) {
		this.articleTags = articleTags;
	}

	public Float getPreviewStar() {
		return previewStar;
	}

	public void setPreviewStar(Float previewStar) {
		this.previewStar = previewStar;
	}

	public String getPreview() {
		return preview;
	}

	public void setPreview(String preview) {
		this.preview = preview;
	}

	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public Date getInsertdate() {
		return this.insertdate;
	}

	public void setInsertdate(Date insertdate) {
		this.insertdate = insertdate;
	}

	public boolean isCommentsActive() {
		return commentsActive;
	}

	public void setCommentsActive(boolean commentsActive) {
		this.commentsActive = commentsActive;
	}

	@Override
	public int hashCode() {
		int hash = 0;
		hash += (articleid != null ? articleid.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object) {
		if (!(object instanceof Article)) {
			return false;
		}
		Article other = (Article) object;
		if ((this.articleid == null && other.articleid != null)
				|| (this.articleid != null && !this.articleid
						.equals(other.articleid))) {
			return false;
		}
		return true;
	}

	@Override
	public String toString() {
		return "Article[id=" + articleid + "]";
	}

	@Override
	public int compare(Article o1, Article o2) {
		return o2.getInsertdate().compareTo(o1.getInsertdate());
	}
	
	@Override
    public Enumeration<TreeNode> children() {
        return new Enumeration<TreeNode>() {
            public boolean hasMoreElements() {
                return false;
            }
 
            public TreeNode nextElement() {
                return null;
            }
        };
    }

	@Override
	public boolean getAllowsChildren() {
		return false;
	}

	@Override
	public TreeNode getChildAt(int childIndex) {
		return null;
	}

	@Override
	public int getChildCount() {
		return 0;
	}

	@Override
	public int getIndex(TreeNode node) {
		return 0;
	}

	@Override
	public TreeNode getParent() {
		return subcategory;
	}

	@Override
	public boolean isLeaf() {
		return true;
	}

}
